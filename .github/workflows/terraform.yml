name: Terraform

on:
  workflow_dispatch:
    inputs:
      do_apply:
        description: 'apply? or not(destroy)'
        required: true
        type: boolean

env:
  TF_BUCKET_NAME   : ${{ vars.bucket_name }}
  TF_BUCKET_PREFIX : ${{ vars.bucket_prefix }}
  TF_VAR_project_id: ${{ vars.project_id }}
  TF_VAR_region    : ${{ vars.region }}
  TF_VAR_zone      : ${{ vars.zone }}
  TF_VAR_registry_location: ${{ vars.registry_location }}
  TF_VAR_repositry_name: ${{ vars.repositry_name }}
  TF_VAR_image_name: ${{ vars.image_name }}
  TF_VAR_image_tag: ${{ vars.image_tag }}
  TF_VAR_db_backet_name: ${{ vars.db_backet_name }}
  TF_VAR_db_backet_path: ${{ vars.db_backet_path }}
  TF_VAR_database_path: ${{ vars.database_path }}
  TF_VAR_service_account_runner: ${{ vars.service_account_runner }}
  TF_VAR_file_bucket_name: ${{ vars.file_bucket_name }}
  TF_VAR_file_bucket_path: ${{ vars.file_bucket_path }}
  TF_VAR_next_origin: ${{ vars.next_origin }}
  TF_VAR_nextauth_url: ${{ vars.nextauth_url }}
  TF_VAR_nextauth_secret_key: ${{ vars.nextauth_secret_key }}
  TF_VAR_google_client_id_key: ${{ vars.google_client_id_key }}
  TF_VAR_google_client_secret_key: ${{ vars.google_client_secret_key }}
  TF_VAR_gh_account_id_key: ${{ vars.gh_account_id_key }}
  TF_VAR_gh_account_secret_key: ${{ vars.gh_account_secret_key }}

jobs:
  create_gce:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: deploy

    steps:

      - uses: actions/checkout@v3
        working-directory: .
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - run: terraform fmt -check -recursive
      - run: terraform init -backend-config="bucket=$TF_BUCKET_NAME" -backend-config="prefix=$TF_BUCKET_PREFIX"
      - run: terraform validate
      - run: terraform plan -no-color -lock-timeout=60m

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && (github.event_name == 'workflow_dispatch' && inputs.do_apply)
        run: terraform apply -auto-approve -input=false

      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main' && (github.event_name == 'workflow_dispatch' && !inputs.do_apply)
        run: terraform destroy -auto-approve -input=false
